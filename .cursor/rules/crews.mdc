---
description: Developing Single Crews as part of a CrewAI flow
globs: 
alwaysApply: false
---
# Developing a single crew for a crewai flow

## Recommended Patters for Crews
- keep it simple if possible and don't create to complex Crews
- make use of sequential processes by default
- make sure to load the agents.yaml file as config
- make sure to load the tasks.yaml file as config
- make use of the crewai decorators like "@CrewBase", "@agent", "@taks" and "@crew"

## Recommended Patterns for Agents
- always pick the best possible model from ChatGPT for each agent
- only allow delegation for agents if truly necessary within the workflow
- use the agents.yaml for role, goal and backstory in a separate config folder for config

## Recommended Patterns for Tasks
- always work with "output_pydantic" to generate well structured output
- always define highly descriptive pydantic data structures for the expected output
- use the tasks.yaml for role, goal and backstory in a separate config folder for config

## Avoid Patterns
- Avoid using other web search tools when exa.ai can be used
- Avoid implementing custom web search solutions