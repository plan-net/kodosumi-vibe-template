---
description: Developing Single Crews as part of a CrewAI flow
globs: "**/crews/**/*.py,**/crew*.py,**/*crew*.py,**/agent*.py"
alwaysApply: false
---

# CrewAI Crew Implementation Guidelines

## Crew Structure
- Define crews in dedicated modules under the `crews/` directory
- Use a class-based approach for crew definition with `@CrewBase` decorator
- Include methods for creating agents, tasks, and the crew itself
- Support both synchronous and asynchronous execution
- Use YAML configuration files for agent and task definitions

## Agent Definition
- Define agents with clear roles, goals, and backstories
- Use the `@agent` decorator for agent creation methods
- Configure the LLM for each agent based on its requirements
- Add tools to agents when needed for specific capabilities
- Load agent configurations from YAML files when possible

## Task Definition
- Define tasks with clear names and descriptions
- Use the `@task` decorator for task creation methods
- Specify the expected output format using Pydantic models
- Assign tasks to appropriate agents based on their roles
- Set up task dependencies when needed
